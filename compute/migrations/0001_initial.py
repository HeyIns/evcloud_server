# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-08-24 16:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('network', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('location', models.CharField(max_length=100, verbose_name='位置')),
                ('desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='简介')),
                ('order', models.IntegerField(default=0, help_text='用于在页面中的显示顺序，数值越小越靠前。', verbose_name='排序')),
            ],
            options={
                'verbose_name': '分中心',
                'verbose_name_plural': '1_分中心',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('desc', models.CharField(blank=True, max_length=200, null=True)),
                ('order', models.IntegerField(default=0, help_text='用于在页面中的显示顺序，数值越小越靠前。', verbose_name='排序')),
                ('admin_user', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compute.Center')),
            ],
            options={
                'verbose_name': '集群',
                'verbose_name_plural': '2_集群',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipv4', models.GenericIPAddressField(unique=True)),
                ('vcpu_total', models.IntegerField(default=24)),
                ('vcpu_allocated', models.IntegerField(default=0)),
                ('mem_total', models.IntegerField(default=32768)),
                ('mem_allocated', models.IntegerField(default=0)),
                ('mem_reserved', models.IntegerField(default=2038)),
                ('vm_limit', models.IntegerField(default=10)),
                ('vm_created', models.IntegerField(default=0)),
                ('enable', models.BooleanField(default=True)),
                ('desc', models.CharField(blank=True, max_length=200, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compute.Group')),
                ('vlan', models.ManyToManyField(to='network.Vlan')),
            ],
            options={
                'verbose_name': '宿主机',
                'verbose_name_plural': '3_宿主机',
            },
        ),
        migrations.CreateModel(
            name='MigrateLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vmid', models.CharField(max_length=100)),
                ('src_host_ipv4', models.GenericIPAddressField()),
                ('dst_host_ipv4', models.GenericIPAddressField()),
                ('migrate_time', models.DateTimeField(auto_now_add=True)),
                ('result', models.BooleanField()),
                ('error', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_id', models.IntegerField(blank=True, null=True)),
                ('image_snap', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=100)),
                ('uuid', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('vcpu', models.IntegerField()),
                ('mem', models.IntegerField()),
                ('disk', models.CharField(max_length=100)),
                ('deleted', models.BooleanField()),
                ('creator', models.CharField(blank=True, max_length=200, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('ceph_id', models.IntegerField()),
                ('ceph_host', models.CharField(max_length=100)),
                ('ceph_pool', models.CharField(max_length=100)),
                ('ceph_uuid', models.CharField(max_length=100)),
                ('ceph_port', models.IntegerField()),
                ('ceph_username', models.CharField(max_length=100)),
                ('vlan_id', models.IntegerField()),
                ('ipv4', models.CharField(max_length=100)),
                ('vlan_name', models.CharField(max_length=100)),
                ('mac', models.CharField(max_length=100)),
                ('br', models.CharField(max_length=100)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compute.Host')),
            ],
            options={
                'verbose_name': '虚拟机',
                'verbose_name_plural': '4_虚拟机',
            },
        ),
        migrations.CreateModel(
            name='VmArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_id', models.IntegerField(blank=True, null=True)),
                ('center_name', models.CharField(blank=True, max_length=100, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('group_name', models.CharField(blank=True, max_length=100, null=True)),
                ('host_id', models.IntegerField(blank=True, null=True)),
                ('host_ipv4', models.GenericIPAddressField(blank=True, null=True)),
                ('ceph_host', models.GenericIPAddressField(blank=True, null=True)),
                ('ceph_pool', models.CharField(blank=True, max_length=100, null=True)),
                ('image_id', models.IntegerField(blank=True, null=True)),
                ('image_snap', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('uuid', models.CharField(blank=True, max_length=100, null=True)),
                ('vcpu', models.IntegerField(blank=True, null=True)),
                ('mem', models.IntegerField(blank=True, null=True)),
                ('disk', models.CharField(blank=True, max_length=100, null=True)),
                ('mac', models.CharField(blank=True, max_length=17, null=True)),
                ('ipv4', models.GenericIPAddressField(blank=True, null=True)),
                ('vlan', models.GenericIPAddressField(blank=True, null=True)),
                ('br', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, default='', null=True)),
                ('archive_time', models.DateTimeField(auto_now_add=True)),
                ('creator', models.CharField(blank=True, max_length=200, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '虚拟机归档记录',
                'verbose_name_plural': '5_虚拟机归档表',
            },
        ),
    ]
